import React, { useState } from 'react';
import { uploadSingleImage, uploadBatchImages, uploadZipFolder } from '../services/api';

const FileUploader = ({ onResultsReady, isProcessing, setIsProcessing }) => {
  const [selectedFiles, setSelectedFiles] = useState([]);
  const [uploadType, setUploadType] = useState('single');

  const handleFileSelect = (event) => {
    const files = Array.from(event.target.files);
    setSelectedFiles(files);
  };

  const handleUpload = async () => {
    if (selectedFiles.length === 0) return;

    setIsProcessing(true);
    try {
      let result;
      
      if (uploadType === 'single') {
        result = await uploadSingleImage(selectedFiles[0]);
      } else if (uploadType === 'batch') {
        result = await uploadBatchImages(selectedFiles);
      } else if (uploadType === 'zip') {
        result = await uploadZipFolder(selectedFiles[0]);
      }
      
      onResultsReady(result.data);
    } catch (error) {
      console.error('Upload failed:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–æ–≤');
    } finally {
      setIsProcessing(false);
    }
  };

  return (
    <div className="file-uploader">
      <div className="upload-options">
        <h3>üì§ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –∑–∞–≥—Ä—É–∑–∫–∏:</h3>
        
        <div className="option-group">
          <label className="option-label">
            <input 
              type="radio" 
              value="single" 
              checked={uploadType === 'single'}
              onChange={(e) => setUploadType(e.target.value)}
            />
            <span className="option-text">
              <strong>üì∑ –û–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</strong>
              <small>–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–¥–Ω–æ–≥–æ —Ñ–æ—Ç–æ</small>
            </span>
          </label>

          <label className="option-label">
            <input 
              type="radio" 
              value="batch" 
              checked={uploadType === 'batch'}
              onChange={(e) => setUploadType(e.target.value)}
            />
            <span className="option-text">
              <strong>üñºÔ∏è –ù–µ—Å–∫–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</strong>
              <small>–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤</small>
            </span>
          </label>

          <label className="option-label">
            <input 
              type="radio" 
              value="zip" 
              checked={uploadType === 'zip'}
              onChange={(e) => setUploadType(e.target.value)}
            />
            <span className="option-text">
              <strong>üìÅ ZIP –∞—Ä—Ö–∏–≤</strong>
              <small>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–∞–ø–∫—É —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏</small>
            </span>
          </label>
        </div>
      </div>

      <div className="file-input-section">
        <div className="file-input">
          <input
            type="file"
            multiple={uploadType !== 'single' && uploadType !== 'zip'}
            accept={uploadType === 'zip' ? '.zip' : '.jpg,.jpeg,.png'}
            onChange={handleFileSelect}
            disabled={isProcessing}
          />
        </div>

        {selectedFiles.length > 0 && (
          <div className="file-list">
            <h4>–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã ({selectedFiles.length}):</h4>
            <ul>
              {selectedFiles.slice(0, 5).map((file, index) => (
                <li key={index}>{file.name}</li>
              ))}
              {selectedFiles.length > 5 && <li>... –∏ –µ—â–µ {selectedFiles.length - 5} —Ñ–∞–π–ª–æ–≤</li>}
            </ul>
          </div>
        )}
      </div>

      <div className="upload-actions">
        <button 
          onClick={handleUpload} 
          disabled={selectedFiles.length === 0 || isProcessing}
          className={`upload-button ${isProcessing ? 'processing' : ''}`}
        >
          {isProcessing ? (
            <>
              <div className="spinner"></div>
              –û–±—Ä–∞–±–æ—Ç–∫–∞...
            </>
          ) : (
            '–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ'
          )}
        </button>
      </div>

      <div className="upload-tips">
        <h4>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h4>
        <ul>
          <li>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å 1-11 –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</li>
          <li>–ú–æ–¥–µ–ª—å –Ω–∞–π–¥–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –≥–¥–µ –∫–æ–º–ø–ª–µ–∫—Ç –Ω–µ –ø–æ–ª–Ω—ã–π</li>
          <li>–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–¥–µ–ª–∏—Ç –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã</li>
        </ul>
      </div>
    </div>
  );
};

export default FileUploader;